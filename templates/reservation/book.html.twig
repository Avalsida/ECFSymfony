{% extends 'base.html.twig' %}

{% block title %}{{ 'reserve_room'|trans }}{% endblock %}

{% block body %}
<div class="container mt-5 content-container" style="overflow-y: auto; height: 100vh;">
    <h1>{{ 'reserve_room'|trans }} - {{ room.nom }}</h1>
    
    <div class="alert alert-info">
        <p>{{ 'reservation_instructions'|trans }}</p>
        <ul>
            <li>{{ 'reservation_min_max_duration'|trans }}</li>
            <li>{{ 'reservation_available_slots'|trans }}</li>
            <li>{{ 'reservation_half_hour_slots'|trans }}</li>
            <li>{{ 'reservation_unavailable_slots'|trans }}</li>
        </ul>
    </div>

    {% for label, messages in app.flashes %}
    {% if label starts with 'user_' %}
        <div class="alert alert-{{ label == 'user_success' ? 'success' : 'danger' }}">
            {% for message in messages %}
                <p>{{ message }}</p>
            {% endfor %}
        </div>
    {% endif %}
{% endfor %}


   
    <div id="calendar" class="mb-4"></div>

    <div id="reservationModal" class="modal fade" tabindex="-1" aria-labelledby="reservationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reservationModalLabel">{{ 'confirm_reservation'|trans }}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="reservationForm" method="GET" action="{{ path('app_reservation_create', {'roomId': room.id, '_locale': app.request.locale}) }}">
                        <input type="hidden" name="start" id="reservationStart">
                        <input type="hidden" name="end" id="reservationEnd">
                        <p id="reservationDetails"></p>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'cancel'|trans }}</button>
                    <button type="submit" form="reservationForm" class="btn btn-primary">{{ 'confirm'|trans }}</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');

            var style = document.createElement('style');
            style.innerHTML = `
                .fc-day-sat, .fc-day-sun {
                    background-color: lightgray !important;
                }
            `;
            document.head.appendChild(style);

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                slotDuration: '00:30:00',
                slotMinTime: '08:00:00',
                slotMaxTime: '19:00:00',
                allDaySlot: false,
                minDate: new Date(),
                events: [
                    {% for reservation in reservations %}
                        {
                            title: '{{ 'unavailable'|trans }}',
                            start: '{{ reservation.dateReservation|date('Y-m-d') }}T{{ reservation.heureDebut|date('H:i') }}',
                            end: '{{ reservation.dateReservation|date('Y-m-d') }}T{{ reservation.heureFin|date('H:i') }}',
                            backgroundColor: 'red',
                            borderColor: 'red',
                            textColor: 'white',
                            id: '{{ reservation.id }}'
                        },
                    {% endfor %}
                ],
                editable: true,
                selectable: true,
                selectAllow: function(selectInfo) {
                    var day = selectInfo.start.getUTCDay();
                    return day !== 0 && day !== 6; // Bloquer les sélections pour les dimanches (0) et samedis (6)
                },
                select: function(info) {
                    var start = new Date(info.startStr);
                    var end = new Date(info.endStr);

                    // Formater les dates pour l'affichage dans la modal
                    var options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric' };
                    var startFormatted = start.toLocaleString('{{ app.request.locale }}', options);
                    var endFormatted = end.toLocaleString('{{ app.request.locale }}', options);

                    // Remplir les détails de la réservation dans le formulaire
                    document.getElementById('reservationStart').value = info.startStr;
                    document.getElementById('reservationEnd').value = info.endStr;
                    document.getElementById('reservationDetails').innerText = '{{ 'reservation_from'|trans }} ' + startFormatted + ' {{ 'to'|trans }} ' + endFormatted;

                    // Afficher la modal de confirmation
                    var reservationModal = new bootstrap.Modal(document.getElementById('reservationModal'));
                    reservationModal.show();
                }
            });

            calendar.render();
        });
    </script>
</div>
{% endblock %}
